name: CI

on: [push, pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    # Execute the checks inside the container instead the VM.
    container: golangci/golangci-lint:v1.64.8-alpine
    steps:
      - uses: actions/checkout@v4
      - run: |
          # We need this go flag because it started to error after golangci-lint is using Go 1.21.
          # TODO(slok): Remove it on next (>1.54.1) golangci-lint upgrade to check if this problem has gone.
          export GOFLAGS="-buildvcs=false"
          ./hack/scripts/check.sh

  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make ci-unit-test

  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    needs: [check, unit-test]
    strategy:
      matrix:
        kubernetes: [1.29.14, 1.30.10, 1.31.6, 1.32.2]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Execute tests
        env:
          KIND_VERSION: v0.27.0
        run: |
          # Get dependencies.
          echo "Getting dependencies..."
          curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
          curl -Lo kubectl http://cdn.dl.k8s.io/release/v${{ matrix.kubernetes }}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

          # Start cluster.
          echo "Executing ${{ matrix.kubernetes }} Kubernetes tests..."
          KUBERNETES_VERSION=${{ matrix.kubernetes }} make ci-integration-test
