// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/spotahome/kooper/examples/pod-terminator-operator/v2/apis/chaos/v1alpha1"
	chaosv1alpha1 "github.com/spotahome/kooper/examples/pod-terminator-operator/v2/client/k8s/clientset/versioned/typed/chaos/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakePodTerminators implements PodTerminatorInterface
type fakePodTerminators struct {
	*gentype.FakeClientWithList[*v1alpha1.PodTerminator, *v1alpha1.PodTerminatorList]
	Fake *FakeChaosV1alpha1
}

func newFakePodTerminators(fake *FakeChaosV1alpha1) chaosv1alpha1.PodTerminatorInterface {
	return &fakePodTerminators{
		gentype.NewFakeClientWithList[*v1alpha1.PodTerminator, *v1alpha1.PodTerminatorList](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("podterminators"),
			v1alpha1.SchemeGroupVersion.WithKind("PodTerminator"),
			func() *v1alpha1.PodTerminator { return &v1alpha1.PodTerminator{} },
			func() *v1alpha1.PodTerminatorList { return &v1alpha1.PodTerminatorList{} },
			func(dst, src *v1alpha1.PodTerminatorList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.PodTerminatorList) []*v1alpha1.PodTerminator {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.PodTerminatorList, items []*v1alpha1.PodTerminator) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
